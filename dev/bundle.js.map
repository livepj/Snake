{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./BaseGame.js","webpack:///./Board.js","webpack:///./Button.js","webpack:///./GameControl.js","webpack:///./GodGame.js","webpack:///./KeyboardHandler.js","webpack:///./Menu.js","webpack:///./PortalGame.js","webpack:///./SpeedGame.js","webpack:///./Timer.js","webpack:///./UI.js","webpack:///./WallsGame.js","webpack:///./index.js"],"names":["BaseGame","_food","push","_getRandomFreePosition","_updateTimeMS","alsoCheck","checkList","concat","_snakeSequence","freeCells","width","height","length","freePositionNumber","sort","a","b","reduce","busyPosition","Math","floor","random","newHeadPosition","_getNewHeadPosition","unshift","_eatIfPossible","e","newDirection","shift","_direction","x","y","_hasCollisions","direction","comparedDirection","head","tails","slice","food","headX","headY","newFood","filter","pop","_addFood","some","tailX","tailY","text","console","log","position","result","direction1","direction2","opposites","left","right","up","down","Board","addChild","PIXI","screenHeihgt","lineStyle","set","context","clear","walls","forEach","cell","color","drawRect","beginFill","map","value","Button","pivot","base","endFill","lightBorder","moveTo","lineTo","darkBorder","label","fontSize","fill","fontWeight","anchor","interactive","buttonMode","on","visible","GameControl","modesList","Timer","KeyboardHandler","ui","modeNumber","onKeyDown","charAt","toUpperCase","changeDirection","mode","GodGame","WallsGame","SpeedGame","PortalGame","getContext","setScore","board","drawContext","delay","updateTimeMS","update","snakeSize","resume","pause","document","addEventListener","code","callBack","Menu","texts","i","container","body","onGraphics","pixiText","fontFamily","emit","size","drawRoundedRect","findIndex","timeMS","Promise","resolve","reject","callback","deltaMS","remove","add","stop","start","UI","screenWidth","score","panel","constantText","setMenuVisible","menuButtons","menu","distance","button","play","exit","_walls","wallX","wallY","app","backgroundColor","antialias","appendChild","view","globalThis","__PIXI_APP__","stage"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"vendors~main\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { height, width } from \".\"\r\n\r\nexport class BaseGame {\r\n    /** @type {Direction} */\r\n    _direction = 'right'\r\n    _snakeSequence = [[4, 2], [3, 2], [2, 2]]\r\n    /** @type {Position[]} */\r\n    _food = []\r\n    /** @type {Position[]} */\r\n    #directionsQueue = []\r\n    #directionChanged = false\r\n    #isGameOver = false\r\n    _updateTimeMS = 500\r\n    get updateTimeMS() {\r\n        return this._updateTimeMS\r\n    }\r\n\r\n    constructor() {\r\n        this._food.push(this._getRandomFreePosition())\r\n    }\r\n\r\n    /**\r\n     * @param {position[]} alsoCheck \r\n     */\r\n    _getRandomFreePosition(alsoCheck) {\r\n        let checkList = this._food.concat(this._snakeSequence)\r\n        if (alsoCheck) {\r\n            checkList = checkList.concat(alsoCheck)\r\n        }\r\n        const freeCells = width * height - checkList.length\r\n        if (freeCells <= 0) {\r\n            throw 'no more place'\r\n        }\r\n        const freePositionNumber = checkList.sort((a, b) => this.#pos2num(a) - this.#pos2num(b)).reduce((freePositionNumber, busyPosition) => {\r\n            if (freePositionNumber >= this.#pos2num(busyPosition)) {\r\n                freePositionNumber++\r\n            }\r\n            return freePositionNumber\r\n        }, Math.floor(Math.random() * freeCells))\r\n        return this.#num2pos(freePositionNumber)\r\n    }\r\n\r\n    update() {\r\n        if (this.#isGameOver) {\r\n            return\r\n        }\r\n        const newHeadPosition = this._getNewHeadPosition()\r\n        if (!newHeadPosition) {\r\n            this.#gameOver('you crashed')\r\n            return\r\n        }\r\n        this._snakeSequence.unshift(newHeadPosition)\r\n        try {\r\n            this._eatIfPossible()\r\n        } catch (e) {\r\n            this.#gameOver(e)\r\n            return\r\n        }\r\n        const newDirection = this.#directionsQueue.shift()\r\n        this.#directionChanged = !!newDirection\r\n        this._direction = newDirection ?? this._direction\r\n    }\r\n\r\n    _getNewHeadPosition() {\r\n        let [x, y] = this._snakeSequence[0]\r\n        switch (this._direction) {\r\n            case \"up\":\r\n                y -= 1\r\n                break\r\n            case \"down\":\r\n                y += 1\r\n                break\r\n            case \"left\":\r\n                x -= 1\r\n                break\r\n            case \"right\":\r\n                x += 1\r\n        }\r\n        if (this._hasCollisions([x, y])) {\r\n            return\r\n        }\r\n        return [x, y]\r\n    }\r\n\r\n    /**\r\n     * @param {string} text \r\n     */\r\n    #gameOver(text) {\r\n        this.#isGameOver = true\r\n        console.log('gameOver', text)\r\n    }\r\n\r\n    /**\r\n     * @param {Direction} direction \r\n     */\r\n    changeDirection(direction) {\r\n        const { length } = this.#directionsQueue\r\n        const comparedDirection = length ? this.#directionsQueue[length - 1] : this._direction\r\n        if (comparedDirection !== direction && !this.#isOposite(comparedDirection, direction)) {\r\n            if (this.#directionChanged) {\r\n                this.#directionsQueue.push(direction)\r\n            } else {\r\n                this._direction = direction\r\n                this.#directionChanged = true\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    getContext() {\r\n        return {\r\n            head: this._snakeSequence[0],\r\n            tails: this._snakeSequence.slice(1),\r\n            food: this._food.concat()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {number} position\r\n     */\r\n    #num2pos(position) {\r\n        const result = [position % width]\r\n        result[1] = (position - result[0]) / width\r\n        return result\r\n    }\r\n\r\n    /**\r\n     * @param {Position} param0\r\n     */\r\n    #pos2num([x, y]) {\r\n        return y * width + x\r\n    }\r\n\r\n    _addFood() {\r\n        this._food.push(this._getRandomFreePosition())\r\n    }\r\n\r\n    /**\r\n     * @param {Direction} direction1 \r\n     * @param {Direction} direction2 \r\n     */\r\n    #isOposite(direction1, direction2) {\r\n        const opposites = {\r\n            left: 'right',\r\n            right: 'left',\r\n            up: 'down',\r\n            down: 'up',\r\n        }\r\n        return opposites[direction1] === direction2;\r\n    }\r\n\r\n    _eatIfPossible() {\r\n        const [headX, headY] = this._snakeSequence[0]\r\n        const newFood = this._food.filter(([x, y]) => headX !== x || headY !== y)\r\n        if (newFood.length === this._food.length) {\r\n            this._snakeSequence.pop()\r\n        } else {\r\n            this._food = newFood\r\n            this._addFood()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {Position} param0 \r\n     */\r\n    _hasCollisions([x, y]) {\r\n        return x < 0 || x >= width || y < 0 || y >= height || this._snakeSequence.slice(1, -1).some(([tailX, tailY]) => tailX === x && tailY === y)\r\n    }\r\n}","import * as PIXI from 'pixi.js'\r\nimport { height, screenHeihgt } from '.'\r\nexport class Board extends PIXI.Container {\r\n    #background = this.addChild(new PIXI.Graphics())\r\n    #graphics = this.addChild(new PIXI.Graphics())\r\n    #cellSize = screenHeihgt / (height + 2)\r\n    constructor() {\r\n        super()\r\n        this.#drawBackground()\r\n        this.#graphics.lineStyle({ width: 1 })\r\n        this.#graphics.position.set(this.#cellSize, this.#cellSize)\r\n    }\r\n    /**\r\n     * @param {Context} context \r\n     */\r\n    drawContext(context) {\r\n        this.#graphics.clear().lineStyle({ width: 1 })\r\n        const { walls, head, tails, food } = context\r\n        if (walls) {\r\n            walls.forEach(cell => this.#drawCell(cell, 'wall'))\r\n        }\r\n        food.forEach(cell => this.#drawCell(cell, 'food'))\r\n        tails.forEach(cell => this.#drawCell(cell, 'tail'))\r\n        this.#drawCell(head, 'head')\r\n    }\r\n\r\n    #drawBackground() {\r\n        this.#background.lineStyle({ width: this.#cellSize, color: 0xa96a0e })\r\n            .drawRect(this.#cellSize / 2, this.#cellSize / 2, screenHeihgt - this.#cellSize, screenHeihgt - this.#cellSize)\r\n    }\r\n\r\n    /**\r\n     * @param {Cell} cell \r\n     * @param {[number, number]} position\r\n     */\r\n    #drawCell(position, cell) {\r\n        this.#graphics.beginFill(cell === 'food' ? 0x27865d : cell === 'head' ? 0xb8b926 : cell === 'tail' ? 0xf4f2f4 : 0x345662)\r\n            .drawRect(...position.map(value => value * this.#cellSize), this.#cellSize, this.#cellSize)\r\n    }\r\n}","import * as PIXI from 'pixi.js'\r\n\r\nexport default class Button extends PIXI.Container {\r\n    constructor(text) {\r\n        super()\r\n        const width = 120\r\n        const height = 80\r\n        this.pivot.set(width / 2, height / 2)\r\n        const base = this.addChild(new PIXI.Graphics())\r\n        base.beginFill(0x245450)\r\n        base.drawRect(0, 0, width, height)\r\n        base.endFill()\r\n\r\n        const lightBorder = this.addChild(new PIXI.Graphics())\r\n        lightBorder.lineStyle(1, 0x3e5d61, 1)\r\n        lightBorder.moveTo(0, height)\r\n        lightBorder.lineTo(0, 0)\r\n        lightBorder.lineTo(width, 0)\r\n\r\n        const darkBorder = this.addChild(new PIXI.Graphics())\r\n        darkBorder.lineStyle(1, 0, 1)\r\n        darkBorder.moveTo(0, height)\r\n        darkBorder.lineTo(width, height)\r\n        darkBorder.lineTo(width, 0)\r\n\r\n        const label = this.addChild(new PIXI.Text(text, {\r\n            fontSize: 25,\r\n            fill: 0xffffff,\r\n            fontWeight: '600'\r\n        }))\r\n        label.anchor.set(0.5)\r\n        label.x = width / 2\r\n        label.y = height / 2\r\n\r\n        this.interactive = true\r\n        this.buttonMode = true\r\n\r\n        this.on('pointerdown', () => {\r\n            lightBorder.visible = darkBorder.visible = false\r\n        })\r\n\r\n        this.on('pointerup', () => {\r\n            lightBorder.visible = darkBorder.visible = true\r\n        })\r\n\r\n        this.on('pointerupoutside', () => {\r\n            lightBorder.visible = darkBorder.visible = true\r\n        })\r\n    }\r\n}","import { ui, board } from \".\"\r\nimport { BaseGame } from \"./BaseGame\"\r\nimport GodGame from \"./GodGame\"\r\nimport { KeyboardHandler } from \"./KeyboardHandler\"\r\nimport PortalGame from \"./PortalGame\"\r\nimport SpeedGame from \"./SpeedGame\"\r\nimport Timer from \"./Timer\"\r\nimport WallsGame from \"./WallsGame\"\r\n\r\nexport default class GameControl {\r\n    /**\r\n     * @type {BaseGame}\r\n     */\r\n    #game\r\n    #timer = new Timer()\r\n    #keyboardHandler = new KeyboardHandler()\r\n    #_isPlaying = false\r\n    #snakeSize = 0\r\n    /**\r\n     * @type {string[]}\r\n     */\r\n    #modesList\r\n    #score = 0\r\n    constructor(modesList) {\r\n        this.#modesList = modesList\r\n        this.#subscribeOnUI()\r\n        this.#subscribeOnKeyboard()\r\n    }\r\n\r\n    #subscribeOnUI() {\r\n        ui.on('MENU_CLICKED', () => {\r\n            this.#isPlaying = false\r\n        })\r\n        ui.on('EXIT_CLICKED', () => {\r\n            this.#isPlaying = true\r\n        })\r\n        ui.on('PLAY_CLICKED', async modeNumber => {\r\n            this.#timer.clear()\r\n            this.#isPlaying = true\r\n            this.#startGame(this.#modesList[modeNumber])\r\n        })\r\n    }\r\n\r\n    #subscribeOnKeyboard() {\r\n        ['left', 'right', 'up', 'down'].forEach(direction =>\r\n            this.#keyboardHandler.onKeyDown(`Arrow${direction.charAt(0).toUpperCase() + direction.slice(1)}`, () =>\r\n                this.#isPlaying && this.#game.changeDirection(direction)\r\n            )\r\n        )\r\n    }\r\n\r\n    async #startGame(mode) {\r\n        this.#score = 0\r\n        switch (mode) {\r\n            case 'Classic':\r\n                this.#game = new BaseGame()\r\n                break\r\n            case 'No Die':\r\n                this.#game = new GodGame()\r\n                break\r\n            case 'Walls':\r\n                this.#game = new WallsGame()\r\n                break\r\n            case 'Speed':\r\n                this.#game = new SpeedGame()\r\n                break\r\n            case 'Portal':\r\n                this.#game = new PortalGame()\r\n        }\r\n        let context = this.#game.getContext()\r\n        this.#snakeSize = context.tails.length\r\n        while (context) {\r\n            ui.setScore(this.#score)\r\n            board.drawContext(context)\r\n            try {\r\n                await this.#timer.delay(this.#game.updateTimeMS)\r\n            }\r\n            catch (e) {\r\n                break\r\n            }\r\n            this.#game.update()\r\n            context = this.#game.getContext()\r\n            const snakeSize = context.tails.length\r\n            if (snakeSize > this.#snakeSize) {\r\n                this.#score += snakeSize - this.#snakeSize\r\n                this.#snakeSize = snakeSize\r\n            }\r\n        }\r\n    }\r\n    get #isPlaying() {\r\n        return this.#_isPlaying\r\n    }\r\n    set #isPlaying(value) {\r\n        if (value) {\r\n            this.#timer.resume()\r\n        } else {\r\n            this.#timer.pause()\r\n        }\r\n        this.#_isPlaying = value\r\n    }\r\n}","import { height, width } from \".\";\r\nimport { BaseGame } from \"./BaseGame\";\r\n\r\nexport default class GodGame extends BaseGame {\r\n    _getNewHeadPosition() {\r\n        let [x, y] = this._snakeSequence[0]\r\n        switch (this._direction) {\r\n            case \"up\":\r\n                y -= 1\r\n                if (y < 0) {\r\n                    y = height - 1\r\n                }\r\n                break\r\n            case \"down\":\r\n                y += 1\r\n                if (y >= height) {\r\n                    y = 0\r\n                }\r\n                break\r\n            case \"left\":\r\n                x -= 1\r\n                if (x < 0) {\r\n                    x = width - 1\r\n                }\r\n                break\r\n            case \"right\":\r\n                x += 1\r\n                if (x >= width) {\r\n                    x = 0\r\n                }\r\n        }\r\n        return [x, y]\r\n    }\r\n}","export class KeyboardHandler {\r\n    #keyDict = {}\r\n    #callBacksDict = {}\r\n\r\n    constructor() {\r\n        document.addEventListener('keydown', ({ code }) => {\r\n            if (!this.#keyDict[code]) {\r\n                this.#callBacksDict[code]?.forEach(callBack => callBack(code))\r\n                this.#keyDict[code] = true\r\n            }\r\n        })\r\n        document.addEventListener('keyup', e => (this.#keyDict[e.code] = false))\r\n    }\r\n\r\n    /**\r\n     * @param {string} code\r\n     * @param {() => void} callBack\r\n     */\r\n    onKeyDown(code, callBack) {\r\n        if (!this.#callBacksDict[code]) {\r\n            this.#callBacksDict[code] = [callBack]\r\n        } else {\r\n            this.#callBacksDict[code].push(callBack)\r\n        }\r\n    }\r\n}\r\n","import * as PIXI from 'pixi.js'\r\n\r\nexport class Menu extends PIXI.Container {\r\n    #value = 0\r\n    /**\r\n     * @param {string[]} texts \r\n     * @param {number} width \r\n     */\r\n    constructor(texts, width) {\r\n        super()\r\n        this.addChild(new PIXI.Graphics()).beginFill(0x195756).drawRect(0, 0, width, 280)\r\n        texts.forEach((text, i) => {\r\n            const container = this.addChild(new PIXI.Container())\r\n            const { body, onGraphics } = this.#createCheckBox()\r\n            onGraphics.visible = i === this.#value\r\n            container.addChild(body)\r\n            container.position.set(34, 25 + i * 50)\r\n            this.on('VALUE_CHANGED', () => {\r\n                onGraphics.visible = this.#value === i\r\n            })\r\n            const pixiText = container.addChild(new PIXI.Text(text, { fontFamily: \"times new roman\", fill: 0xffffff, fontSize: 30 }))\r\n            pixiText.anchor.y = 0.5\r\n            pixiText.x = 40\r\n            container.interactive = this.buttonMode = true\r\n            container.on('pointertap', () => {\r\n                this.#value = i\r\n                this.emit('VALUE_CHANGED')\r\n            })\r\n        })\r\n    }\r\n\r\n    #createCheckBox() {\r\n        const size = 30\r\n        const body = new PIXI.Container()\r\n        body.addChild(new PIXI.Graphics().beginFill(0xffffff).drawRoundedRect(-size / 2, -size / 2, size, size, 2))\r\n        const onGraphics = body.addChild(new PIXI.Graphics())\r\n            .beginFill(0x0075ff)\r\n            .drawRoundedRect(-size / 2, -size / 2, size, size, 2)\r\n            .endFill()\r\n            .lineStyle({ width: 5, color: 0xffffff })\r\n            .moveTo(-9, 0)\r\n            .lineTo(-3, 6)\r\n            .lineTo(9, -9)\r\n        return { body, onGraphics }\r\n    }\r\n\r\n    get value() {\r\n        return this.#value\r\n    }\r\n}","import { BaseGame } from \"./BaseGame\";\r\n\r\nexport default class PortalGame extends BaseGame {\r\n    constructor() {\r\n        super()\r\n        this._addFood()\r\n    }\r\n    _eatIfPossible() {\r\n        const [headX, headY] = this._snakeSequence[0]\r\n        const i = this._food.findIndex(([x, y]) => headX === x && headY === y)\r\n        if (i === -1) {\r\n            this._snakeSequence.pop()\r\n            return\r\n        }\r\n        this._snakeSequence[0] = this._food[i ^ 1]\r\n        this._food = []\r\n        this._addFood()\r\n        this._addFood()\r\n    }\r\n}","import { BaseGame } from \"./BaseGame\";\r\n\r\nexport default class SpeedGame extends BaseGame {\r\n    _addFood() {\r\n        super._addFood()\r\n        this._updateTimeMS *= 1 / 1.1\r\n    }\r\n}","import * as PIXI from 'pixi.js'\r\nexport default class Timer {\r\n    #ticker = new PIXI.Ticker()\r\n    /**\r\n     * @type {() => void}\r\n     */\r\n    #reject\r\n    /**\r\n     * @param {number} timeMS \r\n     */\r\n    delay(timeMS) {\r\n        return new Promise((resolve, reject) => {\r\n            this.#reject = reject\r\n            const callback = () => {\r\n                timeMS -= this.#ticker.deltaMS\r\n                if (timeMS <= 0) {\r\n                    this.#ticker.remove(callback)\r\n                    resolve()\r\n                }\r\n            }\r\n            this.#ticker.add(callback)\r\n        })\r\n    }\r\n    pause() {\r\n        this.#ticker.stop()\r\n    }\r\n    resume() {\r\n        this.#ticker.start()\r\n    }\r\n    clear() {\r\n        if (this.#reject) {\r\n            this.#reject()\r\n        }\r\n    }\r\n}","import * as PIXI from 'pixi.js'\r\nimport { screenHeihgt, screenWidth } from '.'\r\nimport { Menu } from './Menu'\r\nimport Button from './Button'\r\n\r\nexport class UI extends PIXI.Container {\r\n    /**\r\n     * @type {PIXI.TextStyle}\r\n     */\r\n    #textStyle = { fontFamily: \"times new roman\", fill: 0xffffff, fontSize: 36 }\r\n    #bestText = new PIXI.Text(\"0\", this.#textStyle)\r\n    #scoreText = new PIXI.Text(\"0\", this.#textStyle)\r\n    #width = screenWidth - screenHeihgt\r\n    /**\r\n     * @type {Menu}\r\n     */\r\n    #menu\r\n    /**\r\n     * @param {text[]} modesList \r\n     */\r\n    constructor(modesList) {\r\n        super()\r\n        this.x = screenHeihgt\r\n        this.addChild(new PIXI.Graphics()).beginFill(0x077482).drawRect(0, 0, this.#width, screenHeihgt)\r\n        this.#addLabel()\r\n        this.#addBest()\r\n        this.#addScore()\r\n        this.#addMenu(modesList)\r\n        this.#addButtons()\r\n    }\r\n\r\n    #addLabel() {\r\n        const label = this.addChild(new PIXI.Text('Snake Game', { fill: 0x55d292, fontSize: 45, fontFamily: \"times new roman\", fontWeight: 'bold' }))\r\n        label.anchor.set(0.5)\r\n        label.position.set(this.#width / 2, 55)\r\n    }\r\n\r\n    #addPanel(y, color, text, pixiText) {\r\n        const panel = this.addChild(new PIXI.Graphics().beginFill(color).drawRect(0, 0, this.#width, 50))\r\n        const constantText = panel.addChild(new PIXI.Text(text, { fontFamily: \"times new roman\", fill: 0xffffff, fontSize: 30 }))\r\n        constantText.position.set(15, panel.height / 2)\r\n        constantText.anchor.y = 0.5\r\n        panel.addChild(pixiText)\r\n        pixiText.position.set(204, panel.height / 2)\r\n        pixiText.anchor.set(0.5)\r\n        panel.y = y\r\n    }\r\n\r\n    #addBest() {\r\n        this.#addPanel(123, 0x075e6c, 'Best :', this.#bestText)\r\n    }\r\n\r\n    #addScore() {\r\n        this.#addPanel(199, 0x074e5c, 'Score :', this.#scoreText)\r\n    }\r\n\r\n    /**\r\n     * @param {text[]} modesList \r\n     */\r\n    #addMenu(modesList) {\r\n        this.#menu = this.addChild(new Menu(modesList, this.#width))\r\n        this.#menu.y = 272\r\n    }\r\n\r\n    #addButtons() {\r\n        const setMenuVisible = (value) => {\r\n            menuButtons.visible = this.#menu.visible = !(menu.visible = !value)\r\n        }\r\n\r\n        const y = 628\r\n        const menu = this.addChild(new Button('Menu'))\r\n        menu.position.set(this.#width / 2, y)\r\n        menu.visible = false\r\n        menu.on('pointertap', () => {\r\n            setMenuVisible(true)\r\n            this.emit('MENU_CLICKED')\r\n        })\r\n\r\n        const menuButtons = this.addChild(new PIXI.Container())\r\n        const distance = 140\r\n        const [play, exit] = ['Play', 'Exit'].map((text, i) => {\r\n            const button = menuButtons.addChild(new Button(text))\r\n            button.x = i * distance\r\n            return button\r\n        })\r\n        menuButtons.pivot.x = distance / 2\r\n        menuButtons.position = menu.position\r\n        exit.on('pointertap', () => {\r\n            setMenuVisible(false)\r\n            this.emit('EXIT_CLICKED')\r\n        })\r\n        play.on('pointertap', () => {\r\n            setMenuVisible(false)\r\n            this.emit('PLAY_CLICKED', this.#menu.value)\r\n        })\r\n    }\r\n\r\n    /**\r\n     * @param {number} score \r\n     */\r\n    setScore(score) {\r\n        this.#scoreText.text = score\r\n        if (score > this.#bestText.text) {\r\n            this.#bestText.text = score\r\n        }\r\n    }\r\n}","import { BaseGame } from \"./BaseGame\";\r\n\r\nexport default class WallsGame extends BaseGame {\r\n    /**\r\n     * @type {Position[]}\r\n     */\r\n    _walls = []\r\n\r\n    _addFood() {\r\n        super._addFood()\r\n        this._walls.push(this._getRandomFreePosition())\r\n    }\r\n\r\n    /**\r\n     * @param {Position} param0 \r\n     */\r\n    _hasCollisions([x, y]) {\r\n        return super._hasCollisions([x, y]) || this._walls.some(([wallX, wallY]) => wallX === x && wallY === y)\r\n    }\r\n\r\n    getContext() {\r\n        return {\r\n            walls: this._walls.concat(),\r\n            ...super.getContext()\r\n        }\r\n    }\r\n\r\n    _getRandomFreePosition() {\r\n        return super._getRandomFreePosition(this._walls)\r\n    }\r\n}","\r\nimport * as PIXI from 'pixi.js'\r\nimport { Board } from './Board'\r\nimport { UI } from './UI'\r\nimport GameControl from './GameControl'\r\n\r\nexport const screenWidth = 1000, screenHeihgt = 700, width = 20, height = 20\r\nconst app = new PIXI.Application({ width: screenWidth, height: screenHeihgt, backgroundColor: 0x575757, antialias: true })\r\ndocument.body.appendChild(app.view)\r\nglobalThis.__PIXI_APP__ = app\r\n\r\nconst modesList = ['Classic', 'No Die', 'Walls', 'Portal', 'Speed']\r\nexport const board = app.stage.addChild(new Board())\r\nexport const ui = app.stage.addChild(new UI(modesList))\r\nnew GameControl(modesList)\r\n\r\n"],"sourceRoot":""}